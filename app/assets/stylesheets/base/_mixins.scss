@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin prefix($property, $value, $prefixes: o ms moz webkit) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }

  #{$property}: $value;
}

@mixin button-bg($bg) {
  color: rgba(255, 255, 255, 1);
  background-color: $bg;
  opacity: .75;
  @include prefix(transition, (box-shadow .28s cubic-bezier(0.4,0.0,0.2,1), opacity .25s ease, background .8s, color .25s ease), o moz webkit);
  position: relative;

  &:hover {
    background-color: darken($bg, 5%);
    opacity: 1;
    color: #fff;
    @include prefix(box-shadow, 0 8px 17px 0 rgba(0,0,0,0.3), o moz webkit);
  }

  &:active {
    @include prefix(transition, none, o moz webkit);
    @include prefix(box-shadow, (0 8px 17px 0 rgba(0,0,0,0.3), inset 0px 2px 3px 0px rgba(0,0,0,0.4)), o moz webkit);
    opacity: 1;
  }
}

@mixin background($imgpath, $type: "", $position: center, $repeat: no-repeat) {
  background: {
    image: asset-url($imgpath);
    position: $position;
    repeat: $repeat;

    @if $type == 'icon' {
      size: contain;
    } @else {
      size: $type;
    }
  }
}

@mixin bg-color($color, $hover: darken($color, 10%)) {
  background-color: $color;

  &:hover {
    -webkit-box-shadow: 0 1px 1px rgba(0,0,0,0.2);
    box-shadow: 0 1px 1px rgba(0,0,0,0.2);
    background-color: $hover;
  }

  &:active {
    -webkit-box-shadow: inset 0 1px 2px rgba(0,0,0,0.3);
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.3);
  }
}

@mixin svg($url, $svg-color: #333, $position: center, $size: contain, $repeat: no-repeat) {
  -webkit-mask-image: url($url);
  mask-image: url($url);
  background-color: $svg-color;
  background-position: $position;
  background-size: $size;
  background-repeat: $repeat;
}